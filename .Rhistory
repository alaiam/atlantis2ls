}
volume <- st
for (i in 1:6){
for(j in 1:89){
if (layer[i,j]>0){
volume[i,j] <- volume[i,j]*area[j]*tickness[layer[i,j]]
}
}
}
mean_temp_overall <- mean_temp_1 <- mean_temp_2 <- mean_temp_3 <- mean_temp_4 <- mean_temp_5 <- mean_temp_6 <- c()
min_temp_overall <- min_temp_1 <- min_temp_2 <- min_temp_3 <- min_temp_4 <- min_temp_5 <- min_temp_6 <- c()
max_temp_overall <- max_temp_1 <- max_temp_2 <- max_temp_3 <- max_temp_4 <- max_temp_5 <- max_temp_6 <- c()
mean_temp_velma_overall <- mean_temp_velma_1 <- mean_temp_velma_2 <- mean_temp_velma_3 <- mean_temp_velma_4 <- mean_temp_velma_5 <- mean_temp_velma_6 <- c()
min_temp_velma_overall <- min_temp_velma_1 <- min_temp_velma_2 <- min_temp_velma_3 <- min_temp_velma_4 <- min_temp_velma_5 <- min_temp_velma_6 <- c()
max_temp_velma_overall <- max_temp_velma_1 <- max_temp_velma_2 <- max_temp_velma_3 <- max_temp_velma_4 <- max_temp_velma_5 <- max_temp_velma_6 <- c()
mean_temp_2095_overall <- mean_temp_2095_1 <- mean_temp_2095_2 <- mean_temp_2095_3 <- mean_temp_2095_4 <- mean_temp_2095_5 <- mean_temp_2095_6 <- c()
min_temp_2095_overall <- min_temp_2095_1 <- min_temp_2095_2 <- min_temp_2095_3 <- min_temp_2095_4 <- min_temp_2095_5 <- min_temp_2095_6 <- c()
max_temp_2095_overall <- max_temp_2095_1 <- max_temp_2095_2 <- max_temp_2095_3 <- max_temp_2095_4 <- max_temp_2095_5 <- max_temp_2095_6 <- c()
mean_temp_roms_overall <- mean_temp_roms_1 <- mean_temp_roms_2 <- mean_temp_roms_3 <- mean_temp_roms_4 <- mean_temp_roms_5 <- mean_temp_roms_6 <- c()
min_temp_roms_overall <- min_temp_roms_1 <- min_temp_roms_2 <- min_temp_roms_3 <- min_temp_roms_4 <- min_temp_roms_5 <- min_temp_roms_6 <- c()
max_temp_roms_overall <- max_temp_roms_1 <- max_temp_roms_2 <- max_temp_roms_3 <- max_temp_roms_4 <- max_temp_roms_5 <- max_temp_roms_6 <- c()
for (i in 1:730){
mean_temp_overall <- c(mean_temp_overall, sum(volume*temp[,,i]/sum(volume)))
mean_temp_1 <- c(mean_temp_1, sum(volume[layer == 1]*temp[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_2 <- c(mean_temp_2, sum(volume[layer == 2]*temp[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_3 <- c(mean_temp_3, sum(volume[layer == 3]*temp[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_4 <- c(mean_temp_4, sum(volume[layer == 4]*temp[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_5 <- c(mean_temp_5, sum(volume[layer == 5]*temp[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_6 <- c(mean_temp_6, sum(volume[layer == 6]*temp[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_overall <- c(max_temp_overall, max(temp[,,i]))
max_temp_1 <- c(max_temp_1, max(temp[,,i][layer == 1]))
max_temp_2 <- c(max_temp_2,max(temp[,,i][layer == 2]))
max_temp_3 <- c(max_temp_3,max(temp[,,i][layer == 3]))
max_temp_4 <- c(max_temp_4,max(temp[,,i][layer == 4]))
max_temp_5 <- c(max_temp_5,max(temp[,,i][layer == 5]))
max_temp_6 <- c(max_temp_6,max(temp[,,i][layer == 6]))
min_temp_overall <- c(min_temp_overall, min(temp[,,i]))
min_temp_1 <- c(min_temp_1, min(temp[,,i][layer == 1]))
min_temp_2 <- c(min_temp_2,min(temp[,,i][layer == 2]))
min_temp_3 <- c(min_temp_3,min(temp[,,i][layer == 3]))
min_temp_4 <- c(min_temp_4,min(temp[,,i][layer == 4]))
min_temp_5 <- c(min_temp_5,min(temp[,,i][layer == 5]))
min_temp_6 <- c(min_temp_6,min(temp[,,i][layer == 6]))
mean_temp_velma_overall <- c(mean_temp_velma_overall, sum(volume*temp_velma[,,i]/sum(volume)))
mean_temp_velma_1 <- c(mean_temp_velma_1, sum(volume[layer == 1]*temp_velma[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_velma_2 <- c(mean_temp_velma_2, sum(volume[layer == 2]*temp_velma[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_velma_3 <- c(mean_temp_velma_3, sum(volume[layer == 3]*temp_velma[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_velma_4 <- c(mean_temp_velma_4, sum(volume[layer == 4]*temp_velma[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_velma_5 <- c(mean_temp_velma_5, sum(volume[layer == 5]*temp_velma[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_velma_6 <- c(mean_temp_velma_6, sum(volume[layer == 6]*temp_velma[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_velma_overall <- c(max_temp_velma_overall, max(temp_velma[,,i]))
max_temp_velma_1 <- c(max_temp_velma_1, max(temp_velma[,,i][layer == 1]))
max_temp_velma_2 <- c(max_temp_velma_2,max(temp_velma[,,i][layer == 2]))
max_temp_velma_3 <- c(max_temp_velma_3,max(temp_velma[,,i][layer == 3]))
max_temp_velma_4 <- c(max_temp_velma_4,max(temp_velma[,,i][layer == 4]))
max_temp_velma_5 <- c(max_temp_velma_5,max(temp_velma[,,i][layer == 5]))
max_temp_velma_6 <- c(max_temp_velma_6,max(temp_velma[,,i][layer == 6]))
min_temp_velma_overall <- c(min_temp_velma_overall, min(temp_velma[,,i]))
min_temp_velma_1 <- c(min_temp_velma_1, min(temp_velma[,,i][layer == 1]))
min_temp_velma_2 <- c(min_temp_velma_2,min(temp_velma[,,i][layer == 2]))
min_temp_velma_3 <- c(min_temp_velma_3,min(temp_velma[,,i][layer == 3]))
min_temp_velma_4 <- c(min_temp_velma_4,min(temp_velma[,,i][layer == 4]))
min_temp_velma_5 <- c(min_temp_velma_5,min(temp_velma[,,i][layer == 5]))
min_temp_velma_6 <- c(min_temp_velma_6,min(temp_velma[,,i][layer == 6]))
mean_temp_2095_overall <- c(mean_temp_2095_overall, sum(volume*temp_2095[,,i]/sum(volume)))
mean_temp_2095_1 <- c(mean_temp_2095_1, sum(volume[layer == 1]*temp_2095[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_2095_2 <- c(mean_temp_2095_2, sum(volume[layer == 2]*temp_2095[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_2095_3 <- c(mean_temp_2095_3, sum(volume[layer == 3]*temp_2095[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_2095_4 <- c(mean_temp_2095_4, sum(volume[layer == 4]*temp_2095[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_2095_5 <- c(mean_temp_2095_5, sum(volume[layer == 5]*temp_2095[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_2095_6 <- c(mean_temp_2095_6, sum(volume[layer == 6]*temp_2095[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_2095_overall <- c(max_temp_2095_overall, max(temp_2095[,,i]))
max_temp_2095_1 <- c(max_temp_2095_1, max(temp_2095[,,i][layer == 1]))
max_temp_2095_2 <- c(max_temp_2095_2,max(temp_2095[,,i][layer == 2]))
max_temp_2095_3 <- c(max_temp_2095_3,max(temp_2095[,,i][layer == 3]))
max_temp_2095_4 <- c(max_temp_2095_4,max(temp_2095[,,i][layer == 4]))
max_temp_2095_5 <- c(max_temp_2095_5,max(temp_2095[,,i][layer == 5]))
max_temp_2095_6 <- c(max_temp_2095_6,max(temp_2095[,,i][layer == 6]))
min_temp_2095_overall <- c(min_temp_2095_overall, min(temp_2095[,,i]))
min_temp_2095_1 <- c(min_temp_2095_1, min(temp_2095[,,i][layer == 1]))
min_temp_2095_2 <- c(min_temp_2095_2,min(temp_2095[,,i][layer == 2]))
min_temp_2095_3 <- c(min_temp_2095_3,min(temp_2095[,,i][layer == 3]))
min_temp_2095_4 <- c(min_temp_2095_4,min(temp_2095[,,i][layer == 4]))
min_temp_2095_5 <- c(min_temp_2095_5,min(temp_2095[,,i][layer == 5]))
min_temp_2095_6 <- c(min_temp_2095_6,min(temp_2095[,,i][layer == 6]))
mean_temp_roms_overall <- c(mean_temp_roms_overall, sum(volume*temp_roms[,,i]/sum(volume)))
mean_temp_roms_1 <- c(mean_temp_roms_1, sum(volume[layer == 1]*temp_roms[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_roms_2 <- c(mean_temp_roms_2, sum(volume[layer == 2]*temp_roms[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_roms_3 <- c(mean_temp_roms_3, sum(volume[layer == 3]*temp_roms[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_roms_4 <- c(mean_temp_roms_4, sum(volume[layer == 4]*temp_roms[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_roms_5 <- c(mean_temp_roms_5, sum(volume[layer == 5]*temp_roms[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_roms_6 <- c(mean_temp_roms_6, sum(volume[layer == 6]*temp_roms[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_roms_overall <- c(max_temp_roms_overall, max(temp_roms[,,i]))
max_temp_roms_1 <- c(max_temp_roms_1, max(temp_roms[,,i][layer == 1]))
max_temp_roms_2 <- c(max_temp_roms_2,max(temp_roms[,,i][layer == 2]))
max_temp_roms_3 <- c(max_temp_roms_3,max(temp_roms[,,i][layer == 3]))
max_temp_roms_4 <- c(max_temp_roms_4,max(temp_roms[,,i][layer == 4]))
max_temp_roms_5 <- c(max_temp_roms_5,max(temp_roms[,,i][layer == 5]))
max_temp_roms_6 <- c(max_temp_roms_6,max(temp_roms[,,i][layer == 6]))
min_temp_roms_overall <- c(min_temp_roms_overall, min(temp_roms[,,i]))
min_temp_roms_1 <- c(min_temp_roms_1, min(temp_roms[,,i][layer == 1]))
min_temp_roms_2 <- c(min_temp_roms_2,min(temp_roms[,,i][layer == 2]))
min_temp_roms_3 <- c(min_temp_roms_3,min(temp_roms[,,i][layer == 3]))
min_temp_roms_4 <- c(min_temp_roms_4,min(temp_roms[,,i][layer == 4]))
min_temp_roms_5 <- c(min_temp_roms_5,min(temp_roms[,,i][layer == 5]))
min_temp_roms_6 <- c(min_temp_roms_6,min(temp_roms[,,i][layer == 6]))
}
abs_max <- 16 #max(temp, temp_velma, temp_2095, na.rm= T)
abs_min <- 7.5 #min(temp,temp_velma, temp_2095, na.rm= T)
# Créer le graphique
# pdf(width=9,height = 4.5)
# Configuration de la disposition des graphiques et ajustement des marges globales
par(mfrow = c(1, 2), oma = c(3, 3, 2, 1), mar = c(2, 2, 2, 1))
# Définir les limites de l'axe y
abs_min <- min(c(mean_temp_roms_1, mean_temp_1, mean_temp_velma_1, mean_temp_roms_5, mean_temp_5, mean_temp_velma_5))
abs_max <- max(c(mean_temp_roms_1, mean_temp_1, mean_temp_velma_1, mean_temp_roms_5, mean_temp_5, mean_temp_velma_5))
# Surface layer
plot(1:730/2, mean_temp_roms_1, type = "l", col = "#FF4500", lwd = 2, xlab = "",
ylab = "", main = "Surface Layer (0-5m)", ylim = c(abs_min, abs_max), axes = FALSE)
axis(1, at = c(0,100,200,300,400))
axis(2, at = c(6,8,10,12,14,16))
# box(col = )
lines(1:730/2, mean_temp_1, col = "#1E3A8A", lwd = 2)
lines(1:730/2, mean_temp_velma_1, col = "#ADFF2F", lwd = 2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
legend("topleft", legend = c("ROMS", "SSM", "SSM-VELMA"), col = c("#FF4500", "#1E3A8A", "#ADFF2F"), lty = 1, lwd = 2, bty = "n")
# Depth layer
plot(1:730/2, mean_temp_roms_5, type = "l", col = "#FF4500", lwd = 2, xlab = "",
ylab = "", main = "Layer 5 (100-150 m)", ylim = c(abs_min, abs_max), axes = FALSE)
axis(1, at = c(0,100,200,300,400))
axis(2, at = c(6,8,10,12,14,16, labels = FALSE))
# box(col = )
lines(1:730/2, mean_temp_5, col = "#1E3A8A", lwd = 2)
lines(1:730/2, mean_temp_velma_5, col = "#ADFF2F", lwd = 2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
legend("topleft", legend = c("ROMS", "SSM", "SSM-VELMA"), col = c("#FF4500", "#1E3A8A", "#ADFF2F"), lty = 1, lwd = 2, bty = "n")
# Ajouter les étiquettes des axes globaux
mtext("Days", side = 1, outer = TRUE, line = 1, col = , cex = 1.2)
mtext("Temperature (°C)", side = 2, outer = TRUE, line = 1, col = , cex = 1.2)
# dev.off()
# Fermer le fichier netCDF
# nc_close(nc)
# Charger la bibliothèque nécessaire
library(ncdf4)
library(rbgm)
library(tidyverse)
# Définir le répertoire de travail
setwd("C:/Users/Alaia/Desktop/Postdoc/PS/From SSM to Atlantis/Explore_forcing_plot")
# Ouvrir le fichier netCDF
nc <- nc_open("pugetsound_SSM_Atlantis_temp2011_novelma.nc")
atlantis_bgm <- read_bgm("C:/Users/Alaia/Desktop/Postdoc/PS/From SSM to Atlantis/PugetSound_89b_070116.bgm")
atlantis_sf <- atlantis_bgm %>% box_sf()
# Obtenir les données de température
temp <- ncvar_get(nc, varid = "temperature")
area <- atlantis_sf$area
nc <- nc_open("pugetsound_SSM_Atlantis_temp2011_velma.nc")
temp_velma <- ncvar_get(nc, varid = "temperature")
nc <- nc_open("pugetsound_SSM_Atlantis_temp2095.nc")
temp_2095 <- ncvar_get(nc, varid = "temperature")
nc <- nc_open("pugetsound_roms_temp.nc")
temp_roms <- ncvar_get(nc, varid = "temperature")
# Transforamtion des données #
tickness <-  sort((sort(unique(atlantis_sf$botz))[-7] - sort(unique(atlantis_sf$botz))[-1])*-1)
st <- apply(X = temp[,,1], FUN = is.na, MARGIN = c(1,2))*-1+1
layer <-  st
for (i in 1:89){
a <- layer[,i]
a[1:sum(a)] <- sum(a):1
layer[,i] <- a
}
volume <- st
for (i in 1:6){
for(j in 1:89){
if (layer[i,j]>0){
volume[i,j] <- volume[i,j]*area[j]*tickness[layer[i,j]]
}
}
}
mean_temp_overall <- mean_temp_1 <- mean_temp_2 <- mean_temp_3 <- mean_temp_4 <- mean_temp_5 <- mean_temp_6 <- c()
min_temp_overall <- min_temp_1 <- min_temp_2 <- min_temp_3 <- min_temp_4 <- min_temp_5 <- min_temp_6 <- c()
max_temp_overall <- max_temp_1 <- max_temp_2 <- max_temp_3 <- max_temp_4 <- max_temp_5 <- max_temp_6 <- c()
mean_temp_velma_overall <- mean_temp_velma_1 <- mean_temp_velma_2 <- mean_temp_velma_3 <- mean_temp_velma_4 <- mean_temp_velma_5 <- mean_temp_velma_6 <- c()
min_temp_velma_overall <- min_temp_velma_1 <- min_temp_velma_2 <- min_temp_velma_3 <- min_temp_velma_4 <- min_temp_velma_5 <- min_temp_velma_6 <- c()
max_temp_velma_overall <- max_temp_velma_1 <- max_temp_velma_2 <- max_temp_velma_3 <- max_temp_velma_4 <- max_temp_velma_5 <- max_temp_velma_6 <- c()
mean_temp_2095_overall <- mean_temp_2095_1 <- mean_temp_2095_2 <- mean_temp_2095_3 <- mean_temp_2095_4 <- mean_temp_2095_5 <- mean_temp_2095_6 <- c()
min_temp_2095_overall <- min_temp_2095_1 <- min_temp_2095_2 <- min_temp_2095_3 <- min_temp_2095_4 <- min_temp_2095_5 <- min_temp_2095_6 <- c()
max_temp_2095_overall <- max_temp_2095_1 <- max_temp_2095_2 <- max_temp_2095_3 <- max_temp_2095_4 <- max_temp_2095_5 <- max_temp_2095_6 <- c()
mean_temp_roms_overall <- mean_temp_roms_1 <- mean_temp_roms_2 <- mean_temp_roms_3 <- mean_temp_roms_4 <- mean_temp_roms_5 <- mean_temp_roms_6 <- c()
min_temp_roms_overall <- min_temp_roms_1 <- min_temp_roms_2 <- min_temp_roms_3 <- min_temp_roms_4 <- min_temp_roms_5 <- min_temp_roms_6 <- c()
max_temp_roms_overall <- max_temp_roms_1 <- max_temp_roms_2 <- max_temp_roms_3 <- max_temp_roms_4 <- max_temp_roms_5 <- max_temp_roms_6 <- c()
for (i in 1:730){
mean_temp_overall <- c(mean_temp_overall, sum(volume*temp[,,i]/sum(volume)))
mean_temp_1 <- c(mean_temp_1, sum(volume[layer == 1]*temp[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_2 <- c(mean_temp_2, sum(volume[layer == 2]*temp[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_3 <- c(mean_temp_3, sum(volume[layer == 3]*temp[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_4 <- c(mean_temp_4, sum(volume[layer == 4]*temp[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_5 <- c(mean_temp_5, sum(volume[layer == 5]*temp[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_6 <- c(mean_temp_6, sum(volume[layer == 6]*temp[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_overall <- c(max_temp_overall, max(temp[,,i]))
max_temp_1 <- c(max_temp_1, max(temp[,,i][layer == 1]))
max_temp_2 <- c(max_temp_2,max(temp[,,i][layer == 2]))
max_temp_3 <- c(max_temp_3,max(temp[,,i][layer == 3]))
max_temp_4 <- c(max_temp_4,max(temp[,,i][layer == 4]))
max_temp_5 <- c(max_temp_5,max(temp[,,i][layer == 5]))
max_temp_6 <- c(max_temp_6,max(temp[,,i][layer == 6]))
min_temp_overall <- c(min_temp_overall, min(temp[,,i]))
min_temp_1 <- c(min_temp_1, min(temp[,,i][layer == 1]))
min_temp_2 <- c(min_temp_2,min(temp[,,i][layer == 2]))
min_temp_3 <- c(min_temp_3,min(temp[,,i][layer == 3]))
min_temp_4 <- c(min_temp_4,min(temp[,,i][layer == 4]))
min_temp_5 <- c(min_temp_5,min(temp[,,i][layer == 5]))
min_temp_6 <- c(min_temp_6,min(temp[,,i][layer == 6]))
mean_temp_velma_overall <- c(mean_temp_velma_overall, sum(volume*temp_velma[,,i]/sum(volume)))
mean_temp_velma_1 <- c(mean_temp_velma_1, sum(volume[layer == 1]*temp_velma[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_velma_2 <- c(mean_temp_velma_2, sum(volume[layer == 2]*temp_velma[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_velma_3 <- c(mean_temp_velma_3, sum(volume[layer == 3]*temp_velma[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_velma_4 <- c(mean_temp_velma_4, sum(volume[layer == 4]*temp_velma[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_velma_5 <- c(mean_temp_velma_5, sum(volume[layer == 5]*temp_velma[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_velma_6 <- c(mean_temp_velma_6, sum(volume[layer == 6]*temp_velma[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_velma_overall <- c(max_temp_velma_overall, max(temp_velma[,,i]))
max_temp_velma_1 <- c(max_temp_velma_1, max(temp_velma[,,i][layer == 1]))
max_temp_velma_2 <- c(max_temp_velma_2,max(temp_velma[,,i][layer == 2]))
max_temp_velma_3 <- c(max_temp_velma_3,max(temp_velma[,,i][layer == 3]))
max_temp_velma_4 <- c(max_temp_velma_4,max(temp_velma[,,i][layer == 4]))
max_temp_velma_5 <- c(max_temp_velma_5,max(temp_velma[,,i][layer == 5]))
max_temp_velma_6 <- c(max_temp_velma_6,max(temp_velma[,,i][layer == 6]))
min_temp_velma_overall <- c(min_temp_velma_overall, min(temp_velma[,,i]))
min_temp_velma_1 <- c(min_temp_velma_1, min(temp_velma[,,i][layer == 1]))
min_temp_velma_2 <- c(min_temp_velma_2,min(temp_velma[,,i][layer == 2]))
min_temp_velma_3 <- c(min_temp_velma_3,min(temp_velma[,,i][layer == 3]))
min_temp_velma_4 <- c(min_temp_velma_4,min(temp_velma[,,i][layer == 4]))
min_temp_velma_5 <- c(min_temp_velma_5,min(temp_velma[,,i][layer == 5]))
min_temp_velma_6 <- c(min_temp_velma_6,min(temp_velma[,,i][layer == 6]))
mean_temp_2095_overall <- c(mean_temp_2095_overall, sum(volume*temp_2095[,,i]/sum(volume)))
mean_temp_2095_1 <- c(mean_temp_2095_1, sum(volume[layer == 1]*temp_2095[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_2095_2 <- c(mean_temp_2095_2, sum(volume[layer == 2]*temp_2095[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_2095_3 <- c(mean_temp_2095_3, sum(volume[layer == 3]*temp_2095[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_2095_4 <- c(mean_temp_2095_4, sum(volume[layer == 4]*temp_2095[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_2095_5 <- c(mean_temp_2095_5, sum(volume[layer == 5]*temp_2095[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_2095_6 <- c(mean_temp_2095_6, sum(volume[layer == 6]*temp_2095[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_2095_overall <- c(max_temp_2095_overall, max(temp_2095[,,i]))
max_temp_2095_1 <- c(max_temp_2095_1, max(temp_2095[,,i][layer == 1]))
max_temp_2095_2 <- c(max_temp_2095_2,max(temp_2095[,,i][layer == 2]))
max_temp_2095_3 <- c(max_temp_2095_3,max(temp_2095[,,i][layer == 3]))
max_temp_2095_4 <- c(max_temp_2095_4,max(temp_2095[,,i][layer == 4]))
max_temp_2095_5 <- c(max_temp_2095_5,max(temp_2095[,,i][layer == 5]))
max_temp_2095_6 <- c(max_temp_2095_6,max(temp_2095[,,i][layer == 6]))
min_temp_2095_overall <- c(min_temp_2095_overall, min(temp_2095[,,i]))
min_temp_2095_1 <- c(min_temp_2095_1, min(temp_2095[,,i][layer == 1]))
min_temp_2095_2 <- c(min_temp_2095_2,min(temp_2095[,,i][layer == 2]))
min_temp_2095_3 <- c(min_temp_2095_3,min(temp_2095[,,i][layer == 3]))
min_temp_2095_4 <- c(min_temp_2095_4,min(temp_2095[,,i][layer == 4]))
min_temp_2095_5 <- c(min_temp_2095_5,min(temp_2095[,,i][layer == 5]))
min_temp_2095_6 <- c(min_temp_2095_6,min(temp_2095[,,i][layer == 6]))
mean_temp_roms_overall <- c(mean_temp_roms_overall, sum(volume*temp_roms[,,i]/sum(volume)))
mean_temp_roms_1 <- c(mean_temp_roms_1, sum(volume[layer == 1]*temp_roms[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_roms_2 <- c(mean_temp_roms_2, sum(volume[layer == 2]*temp_roms[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_roms_3 <- c(mean_temp_roms_3, sum(volume[layer == 3]*temp_roms[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_roms_4 <- c(mean_temp_roms_4, sum(volume[layer == 4]*temp_roms[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_roms_5 <- c(mean_temp_roms_5, sum(volume[layer == 5]*temp_roms[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_roms_6 <- c(mean_temp_roms_6, sum(volume[layer == 6]*temp_roms[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_roms_overall <- c(max_temp_roms_overall, max(temp_roms[,,i]))
max_temp_roms_1 <- c(max_temp_roms_1, max(temp_roms[,,i][layer == 1]))
max_temp_roms_2 <- c(max_temp_roms_2,max(temp_roms[,,i][layer == 2]))
max_temp_roms_3 <- c(max_temp_roms_3,max(temp_roms[,,i][layer == 3]))
max_temp_roms_4 <- c(max_temp_roms_4,max(temp_roms[,,i][layer == 4]))
max_temp_roms_5 <- c(max_temp_roms_5,max(temp_roms[,,i][layer == 5]))
max_temp_roms_6 <- c(max_temp_roms_6,max(temp_roms[,,i][layer == 6]))
min_temp_roms_overall <- c(min_temp_roms_overall, min(temp_roms[,,i]))
min_temp_roms_1 <- c(min_temp_roms_1, min(temp_roms[,,i][layer == 1]))
min_temp_roms_2 <- c(min_temp_roms_2,min(temp_roms[,,i][layer == 2]))
min_temp_roms_3 <- c(min_temp_roms_3,min(temp_roms[,,i][layer == 3]))
min_temp_roms_4 <- c(min_temp_roms_4,min(temp_roms[,,i][layer == 4]))
min_temp_roms_5 <- c(min_temp_roms_5,min(temp_roms[,,i][layer == 5]))
min_temp_roms_6 <- c(min_temp_roms_6,min(temp_roms[,,i][layer == 6]))
}
abs_max <- 16 #max(temp, temp_velma, temp_2095, na.rm= T)
abs_min <- 7.5 #min(temp,temp_velma, temp_2095, na.rm= T)
# Créer le graphique
# pdf(width=9,height = 4.5)
# Configuration de la disposition des graphiques et ajustement des marges globales
par(mfrow = c(1, 2), oma = c(3, 3, 2, 1), mar = c(2, 2, 2, 1))
# Définir les limites de l'axe y
abs_min <- min(c(mean_temp_roms_1, mean_temp_1, mean_temp_velma_1, mean_temp_roms_5, mean_temp_5, mean_temp_velma_5))
abs_max <- max(c(mean_temp_roms_1, mean_temp_1, mean_temp_velma_1, mean_temp_roms_5, mean_temp_5, mean_temp_velma_5))
# Surface layer
plot(1:730/2, mean_temp_roms_1, type = "l", col = "#FF4500", lwd = 2, xlab = "",
ylab = "", main = "Layer 1 (0-5m)", ylim = c(abs_min, abs_max), axes = FALSE)
axis(1, at = c(0,100,200,300,400))
axis(2, at = c(6,8,10,12,14,16))
# box(col = )
lines(1:730/2, mean_temp_1, col = "#1E3A8A", lwd = 2)
lines(1:730/2, mean_temp_velma_1, col = "#ADFF2F", lwd = 2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
legend("topleft", legend = c("ROMS", "SSM", "SSM-VELMA"), col = c("#FF4500", "#1E3A8A", "#ADFF2F"), lty = 1, lwd = 2, bty = "n")
# Depth layer
plot(1:730/2, mean_temp_roms_5, type = "l", col = "#FF4500", lwd = 2, xlab = "",
ylab = "", main = "Layer 5 (100-150 m)", ylim = c(abs_min, abs_max), axes = FALSE)
axis(1, at = c(0,100,200,300,400))
axis(2, at = c(6,8,10,12,14,16, labels = FALSE))
# box(col = )
lines(1:730/2, mean_temp_5, col = "#1E3A8A", lwd = 2)
lines(1:730/2, mean_temp_velma_5, col = "#ADFF2F", lwd = 2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
legend("topleft", legend = c("ROMS", "SSM", "SSM-VELMA"), col = c("#FF4500", "#1E3A8A", "#ADFF2F"), lty = 1, lwd = 2, bty = "n")
# Ajouter les étiquettes des axes globaux
mtext("Days", side = 1, outer = TRUE, line = 1, col = , cex = 1.2)
mtext("Temperature (°C)", side = 2, outer = TRUE, line = 1, col = , cex = 1.2)
# dev.off()
# Fermer le fichier netCDF
# nc_close(nc)
# Charger la bibliothèque nécessaire
library(ncdf4)
library(rbgm)
library(tidyverse)
# Définir le répertoire de travail
setwd("C:/Users/Alaia/Desktop/Postdoc/PS/From SSM to Atlantis/Explore_forcing_plot")
# Ouvrir le fichier netCDF
nc <- nc_open("pugetsound_SSM_Atlantis_temp2011_novelma.nc")
atlantis_bgm <- read_bgm("C:/Users/Alaia/Desktop/Postdoc/PS/From SSM to Atlantis/PugetSound_89b_070116.bgm")
atlantis_sf <- atlantis_bgm %>% box_sf()
# Obtenir les données de température
temp <- ncvar_get(nc, varid = "temperature")
area <- atlantis_sf$area
nc <- nc_open("pugetsound_SSM_Atlantis_temp2011_velma.nc")
temp_velma <- ncvar_get(nc, varid = "temperature")
nc <- nc_open("pugetsound_SSM_Atlantis_temp2095.nc")
temp_2095 <- ncvar_get(nc, varid = "temperature")
nc <- nc_open("pugetsound_roms_temp.nc")
temp_roms <- ncvar_get(nc, varid = "temperature")
# Transforamtion des données #
tickness <-  sort((sort(unique(atlantis_sf$botz))[-7] - sort(unique(atlantis_sf$botz))[-1])*-1)
st <- apply(X = temp[,,1], FUN = is.na, MARGIN = c(1,2))*-1+1
layer <-  st
for (i in 1:89){
a <- layer[,i]
a[1:sum(a)] <- sum(a):1
layer[,i] <- a
}
volume <- st
for (i in 1:6){
for(j in 1:89){
if (layer[i,j]>0){
volume[i,j] <- volume[i,j]*area[j]*tickness[layer[i,j]]
}
}
}
mean_temp_overall <- mean_temp_1 <- mean_temp_2 <- mean_temp_3 <- mean_temp_4 <- mean_temp_5 <- mean_temp_6 <- c()
min_temp_overall <- min_temp_1 <- min_temp_2 <- min_temp_3 <- min_temp_4 <- min_temp_5 <- min_temp_6 <- c()
max_temp_overall <- max_temp_1 <- max_temp_2 <- max_temp_3 <- max_temp_4 <- max_temp_5 <- max_temp_6 <- c()
mean_temp_velma_overall <- mean_temp_velma_1 <- mean_temp_velma_2 <- mean_temp_velma_3 <- mean_temp_velma_4 <- mean_temp_velma_5 <- mean_temp_velma_6 <- c()
min_temp_velma_overall <- min_temp_velma_1 <- min_temp_velma_2 <- min_temp_velma_3 <- min_temp_velma_4 <- min_temp_velma_5 <- min_temp_velma_6 <- c()
max_temp_velma_overall <- max_temp_velma_1 <- max_temp_velma_2 <- max_temp_velma_3 <- max_temp_velma_4 <- max_temp_velma_5 <- max_temp_velma_6 <- c()
mean_temp_2095_overall <- mean_temp_2095_1 <- mean_temp_2095_2 <- mean_temp_2095_3 <- mean_temp_2095_4 <- mean_temp_2095_5 <- mean_temp_2095_6 <- c()
min_temp_2095_overall <- min_temp_2095_1 <- min_temp_2095_2 <- min_temp_2095_3 <- min_temp_2095_4 <- min_temp_2095_5 <- min_temp_2095_6 <- c()
max_temp_2095_overall <- max_temp_2095_1 <- max_temp_2095_2 <- max_temp_2095_3 <- max_temp_2095_4 <- max_temp_2095_5 <- max_temp_2095_6 <- c()
mean_temp_roms_overall <- mean_temp_roms_1 <- mean_temp_roms_2 <- mean_temp_roms_3 <- mean_temp_roms_4 <- mean_temp_roms_5 <- mean_temp_roms_6 <- c()
min_temp_roms_overall <- min_temp_roms_1 <- min_temp_roms_2 <- min_temp_roms_3 <- min_temp_roms_4 <- min_temp_roms_5 <- min_temp_roms_6 <- c()
max_temp_roms_overall <- max_temp_roms_1 <- max_temp_roms_2 <- max_temp_roms_3 <- max_temp_roms_4 <- max_temp_roms_5 <- max_temp_roms_6 <- c()
for (i in 1:730){
mean_temp_overall <- c(mean_temp_overall, sum(volume*temp[,,i]/sum(volume)))
mean_temp_1 <- c(mean_temp_1, sum(volume[layer == 1]*temp[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_2 <- c(mean_temp_2, sum(volume[layer == 2]*temp[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_3 <- c(mean_temp_3, sum(volume[layer == 3]*temp[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_4 <- c(mean_temp_4, sum(volume[layer == 4]*temp[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_5 <- c(mean_temp_5, sum(volume[layer == 5]*temp[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_6 <- c(mean_temp_6, sum(volume[layer == 6]*temp[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_overall <- c(max_temp_overall, max(temp[,,i]))
max_temp_1 <- c(max_temp_1, max(temp[,,i][layer == 1]))
max_temp_2 <- c(max_temp_2,max(temp[,,i][layer == 2]))
max_temp_3 <- c(max_temp_3,max(temp[,,i][layer == 3]))
max_temp_4 <- c(max_temp_4,max(temp[,,i][layer == 4]))
max_temp_5 <- c(max_temp_5,max(temp[,,i][layer == 5]))
max_temp_6 <- c(max_temp_6,max(temp[,,i][layer == 6]))
min_temp_overall <- c(min_temp_overall, min(temp[,,i]))
min_temp_1 <- c(min_temp_1, min(temp[,,i][layer == 1]))
min_temp_2 <- c(min_temp_2,min(temp[,,i][layer == 2]))
min_temp_3 <- c(min_temp_3,min(temp[,,i][layer == 3]))
min_temp_4 <- c(min_temp_4,min(temp[,,i][layer == 4]))
min_temp_5 <- c(min_temp_5,min(temp[,,i][layer == 5]))
min_temp_6 <- c(min_temp_6,min(temp[,,i][layer == 6]))
mean_temp_velma_overall <- c(mean_temp_velma_overall, sum(volume*temp_velma[,,i]/sum(volume)))
mean_temp_velma_1 <- c(mean_temp_velma_1, sum(volume[layer == 1]*temp_velma[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_velma_2 <- c(mean_temp_velma_2, sum(volume[layer == 2]*temp_velma[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_velma_3 <- c(mean_temp_velma_3, sum(volume[layer == 3]*temp_velma[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_velma_4 <- c(mean_temp_velma_4, sum(volume[layer == 4]*temp_velma[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_velma_5 <- c(mean_temp_velma_5, sum(volume[layer == 5]*temp_velma[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_velma_6 <- c(mean_temp_velma_6, sum(volume[layer == 6]*temp_velma[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_velma_overall <- c(max_temp_velma_overall, max(temp_velma[,,i]))
max_temp_velma_1 <- c(max_temp_velma_1, max(temp_velma[,,i][layer == 1]))
max_temp_velma_2 <- c(max_temp_velma_2,max(temp_velma[,,i][layer == 2]))
max_temp_velma_3 <- c(max_temp_velma_3,max(temp_velma[,,i][layer == 3]))
max_temp_velma_4 <- c(max_temp_velma_4,max(temp_velma[,,i][layer == 4]))
max_temp_velma_5 <- c(max_temp_velma_5,max(temp_velma[,,i][layer == 5]))
max_temp_velma_6 <- c(max_temp_velma_6,max(temp_velma[,,i][layer == 6]))
min_temp_velma_overall <- c(min_temp_velma_overall, min(temp_velma[,,i]))
min_temp_velma_1 <- c(min_temp_velma_1, min(temp_velma[,,i][layer == 1]))
min_temp_velma_2 <- c(min_temp_velma_2,min(temp_velma[,,i][layer == 2]))
min_temp_velma_3 <- c(min_temp_velma_3,min(temp_velma[,,i][layer == 3]))
min_temp_velma_4 <- c(min_temp_velma_4,min(temp_velma[,,i][layer == 4]))
min_temp_velma_5 <- c(min_temp_velma_5,min(temp_velma[,,i][layer == 5]))
min_temp_velma_6 <- c(min_temp_velma_6,min(temp_velma[,,i][layer == 6]))
mean_temp_2095_overall <- c(mean_temp_2095_overall, sum(volume*temp_2095[,,i]/sum(volume)))
mean_temp_2095_1 <- c(mean_temp_2095_1, sum(volume[layer == 1]*temp_2095[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_2095_2 <- c(mean_temp_2095_2, sum(volume[layer == 2]*temp_2095[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_2095_3 <- c(mean_temp_2095_3, sum(volume[layer == 3]*temp_2095[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_2095_4 <- c(mean_temp_2095_4, sum(volume[layer == 4]*temp_2095[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_2095_5 <- c(mean_temp_2095_5, sum(volume[layer == 5]*temp_2095[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_2095_6 <- c(mean_temp_2095_6, sum(volume[layer == 6]*temp_2095[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_2095_overall <- c(max_temp_2095_overall, max(temp_2095[,,i]))
max_temp_2095_1 <- c(max_temp_2095_1, max(temp_2095[,,i][layer == 1]))
max_temp_2095_2 <- c(max_temp_2095_2,max(temp_2095[,,i][layer == 2]))
max_temp_2095_3 <- c(max_temp_2095_3,max(temp_2095[,,i][layer == 3]))
max_temp_2095_4 <- c(max_temp_2095_4,max(temp_2095[,,i][layer == 4]))
max_temp_2095_5 <- c(max_temp_2095_5,max(temp_2095[,,i][layer == 5]))
max_temp_2095_6 <- c(max_temp_2095_6,max(temp_2095[,,i][layer == 6]))
min_temp_2095_overall <- c(min_temp_2095_overall, min(temp_2095[,,i]))
min_temp_2095_1 <- c(min_temp_2095_1, min(temp_2095[,,i][layer == 1]))
min_temp_2095_2 <- c(min_temp_2095_2,min(temp_2095[,,i][layer == 2]))
min_temp_2095_3 <- c(min_temp_2095_3,min(temp_2095[,,i][layer == 3]))
min_temp_2095_4 <- c(min_temp_2095_4,min(temp_2095[,,i][layer == 4]))
min_temp_2095_5 <- c(min_temp_2095_5,min(temp_2095[,,i][layer == 5]))
min_temp_2095_6 <- c(min_temp_2095_6,min(temp_2095[,,i][layer == 6]))
mean_temp_roms_overall <- c(mean_temp_roms_overall, sum(volume*temp_roms[,,i]/sum(volume)))
mean_temp_roms_1 <- c(mean_temp_roms_1, sum(volume[layer == 1]*temp_roms[,,i][layer == 1]/sum(volume[layer == 1])))
mean_temp_roms_2 <- c(mean_temp_roms_2, sum(volume[layer == 2]*temp_roms[,,i][layer == 2]/sum(volume[layer == 2])))
mean_temp_roms_3 <- c(mean_temp_roms_3, sum(volume[layer == 3]*temp_roms[,,i][layer == 3]/sum(volume[layer == 3])))
mean_temp_roms_4 <- c(mean_temp_roms_4, sum(volume[layer == 4]*temp_roms[,,i][layer == 4]/sum(volume[layer == 4])))
mean_temp_roms_5 <- c(mean_temp_roms_5, sum(volume[layer == 5]*temp_roms[,,i][layer == 5]/sum(volume[layer == 5])))
mean_temp_roms_6 <- c(mean_temp_roms_6, sum(volume[layer == 6]*temp_roms[,,i][layer == 6]/sum(volume[layer == 6])))
max_temp_roms_overall <- c(max_temp_roms_overall, max(temp_roms[,,i]))
max_temp_roms_1 <- c(max_temp_roms_1, max(temp_roms[,,i][layer == 1]))
max_temp_roms_2 <- c(max_temp_roms_2,max(temp_roms[,,i][layer == 2]))
max_temp_roms_3 <- c(max_temp_roms_3,max(temp_roms[,,i][layer == 3]))
max_temp_roms_4 <- c(max_temp_roms_4,max(temp_roms[,,i][layer == 4]))
max_temp_roms_5 <- c(max_temp_roms_5,max(temp_roms[,,i][layer == 5]))
max_temp_roms_6 <- c(max_temp_roms_6,max(temp_roms[,,i][layer == 6]))
min_temp_roms_overall <- c(min_temp_roms_overall, min(temp_roms[,,i]))
min_temp_roms_1 <- c(min_temp_roms_1, min(temp_roms[,,i][layer == 1]))
min_temp_roms_2 <- c(min_temp_roms_2,min(temp_roms[,,i][layer == 2]))
min_temp_roms_3 <- c(min_temp_roms_3,min(temp_roms[,,i][layer == 3]))
min_temp_roms_4 <- c(min_temp_roms_4,min(temp_roms[,,i][layer == 4]))
min_temp_roms_5 <- c(min_temp_roms_5,min(temp_roms[,,i][layer == 5]))
min_temp_roms_6 <- c(min_temp_roms_6,min(temp_roms[,,i][layer == 6]))
}
abs_max <- 16 #max(temp, temp_velma, temp_2095, na.rm= T)
abs_min <- 7.5 #min(temp,temp_velma, temp_2095, na.rm= T)
# Créer le graphique
# pdf(width=9,height = 4.5)
# Configuration de la disposition des graphiques et ajustement des marges globales
par(mfrow = c(1, 2), oma = c(2.5, 2.5, 2, 1), mar = c(2, 2, 2, 1))
# Définir les limites de l'axe y
abs_min <- min(c(mean_temp_roms_1, mean_temp_1, mean_temp_velma_1, mean_temp_roms_5, mean_temp_5, mean_temp_velma_5))
abs_max <- max(c(mean_temp_roms_1, mean_temp_1, mean_temp_velma_1, mean_temp_roms_5, mean_temp_5, mean_temp_velma_5))
# Surface layer
plot(1:730/2, mean_temp_roms_1, type = "l", col = "#FF4500", lwd = 2, xlab = "",
ylab = "", main = "Layer 1 (0-5m)", ylim = c(abs_min, abs_max), axes = FALSE)
axis(1, at = c(0,100,200,300,400))
axis(2, at = c(6,8,10,12,14,16))
# box(col = )
lines(1:730/2, mean_temp_1, col = "#1E3A8A", lwd = 2)
lines(1:730/2, mean_temp_velma_1, col = "#ADFF2F", lwd = 2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
legend("topleft", legend = c("ROMS", "SSM", "SSM-VELMA"), col = c("#FF4500", "#1E3A8A", "#ADFF2F"), lty = 1, lwd = 2, bty = "n")
# Depth layer
plot(1:730/2, mean_temp_roms_5, type = "l", col = "#FF4500", lwd = 2, xlab = "",
ylab = "", main = "Layer 5 (100-150 m)", ylim = c(abs_min, abs_max), axes = FALSE)
axis(1, at = c(0,100,200,300,400))
axis(2, at = c(6,8,10,12,14,16, labels = FALSE))
# box(col = )
lines(1:730/2, mean_temp_5, col = "#1E3A8A", lwd = 2)
lines(1:730/2, mean_temp_velma_5, col = "#ADFF2F", lwd = 2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
legend("topleft", legend = c("ROMS", "SSM", "SSM-VELMA"), col = c("#FF4500", "#1E3A8A", "#ADFF2F"), lty = 1, lwd = 2, bty = "n")
# Ajouter les étiquettes des axes globaux
mtext("Days", side = 1, outer = TRUE, line = 1, col = , cex = 1.2)
mtext("Temperature (°C)", side = 2, outer = TRUE, line = 1, col = , cex = 1.2)
# dev.off()
# Fermer le fichier netCDF
# nc_close(nc)
# pdf(width=9,height = 4.5)
# Configuration de la disposition des graphiques et ajustement des marges globales
par(mfrow = c(1, 2), oma = c(2.5, 2.5, 2, 1), mar = c(2, 2, 2, 1))
# Définir les limites de l'axe y
abs_min <- min(c(max_temp_roms_1, max_temp_1, max_temp_velma_1, max_temp_roms_5, max_temp_5, max_temp_velma_5))
abs_max <- max(c(max_temp_roms_1, max_temp_1, max_temp_velma_1, max_temp_roms_5, max_temp_5, max_temp_velma_5))
# Surface layer
plot(1:730/2, max_temp_roms_1, type = "l", col = "#FF4500", lwd = 2, xlab = "",
ylab = "", main = "Layer 1 (0-5m)", ylim = c(abs_min, abs_max), axes = FALSE)
axis(1, at = c(0,100,200,300,400))
axis(2, at = c(6,8,10,12,14,16))
# box(col = )
lines(1:730/2, max_temp_1, col = "#1E3A8A", lwd = 2)
lines(1:730/2, max_temp_velma_1, col = "#ADFF2F", lwd = 2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
legend("topleft", legend = c("ROMS", "SSM", "SSM-VELMA"), col = c("#FF4500", "#1E3A8A", "#ADFF2F"), lty = 1, lwd = 2, bty = "n")
# Depth layer
plot(1:730/2, max_temp_roms_5, type = "l", col = "#FF4500", lwd = 2, xlab = "",
ylab = "", main = "Layer 5 (100-150 m)", ylim = c(abs_min, abs_max), axes = FALSE)
axis(1, at = c(0,100,200,300,400))
axis(2, at = c(6,8,10,12,14,16, labels = FALSE))
# box(col = )
lines(1:730/2, max_temp_5, col = "#1E3A8A", lwd = 2)
lines(1:730/2, max_temp_velma_5, col = "#ADFF2F", lwd = 2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
legend("topleft", legend = c("ROMS", "SSM", "SSM-VELMA"), col = c("#FF4500", "#1E3A8A", "#ADFF2F"), lty = 1, lwd = 2, bty = "n")
# Ajouter les étiquettes des axes globaux
mtext("Days", side = 1, outer = TRUE, line = 1, col = , cex = 1.2)
mtext("Temperature (°C)", side = 2, outer = TRUE, line = 1, col = , cex = 1.2)
install.packages("Rtools")
devtools::load_all(".")
devtools::load_all(".")
